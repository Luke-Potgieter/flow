"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9025],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(h,r(r({ref:t},p),{},{components:n})):o.createElement(h,r({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var o=n(7462),a=n(7294),i=n(2389),r=n(9443);var s=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(3616),c=n(6010),p="tabItem_vU9c";function u(e){var t,n,i,r=e.lazy,u=e.block,d=e.defaultValue,m=e.values,h=e.groupId,f=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.lx)(y,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===d?d:null!=(t=null!=d?d:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=g[0])?void 0:i.props.value;if(null!==w&&!y.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=s(),b=k.tabGroupChoices,N=k.setTabGroupChoices,C=(0,a.useState)(w),S=C[0],T=C[1],A=[],x=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var E=b[h];null!=E&&E!==S&&y.some((function(e){return e.value===E}))&&T(E)}var z=function(e){var t=e.currentTarget,n=A.indexOf(t),o=y[n].value;o!==S&&(x(t),T(o),null!=h&&N(h,o))},M=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o=A.indexOf(e.currentTarget)+1;n=A[o]||A[0];break;case"ArrowLeft":var a=A.indexOf(e.currentTarget)-1;n=A[a]||A[A.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":u},f)},y.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:function(e){return A.push(e)},onKeyDown:M,onFocus:z,onClick:z},i,{className:(0,c.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":S===t})}),null!=n?n:t)}))),r?(0,a.cloneElement)(g.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function d(e){var t=(0,i.Z)();return a.createElement(u,(0,o.Z)({key:String(t)},e))}},5574:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return h}});var o=n(7462),a=n(3366),i=(n(7294),n(3905)),r=n(6396),s=n(8215),l=["components"],c={sidebar_position:3},p="Connectors",u={unversionedId:"concepts/connectors",id:"concepts/connectors",title:"Connectors",description:"Connectors are plugin components that bridge the gap between Flow\u2019s runtime and",source:"@site/docs/concepts/connectors.md",sourceDirName:"concepts",slug:"/concepts/connectors",permalink:"/concepts/connectors",editUrl:"https://github.com/estuary/flow/edit/master/site/docs/concepts/connectors.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Collections",permalink:"/concepts/collections"},next:{title:"Derivations",permalink:"/concepts/derivations"}},d=[{value:"Why an open connector architecture?",id:"why-an-open-connector-architecture",children:[],level:2},{value:"Using connectors",id:"using-connectors",children:[{value:"<code>flowctl discover</code>",id:"flowctl-discover",children:[{value:"Step 1: Generate a configuration file stub",id:"step-1-generate-a-configuration-file-stub",children:[],level:4},{value:"Step 2: Update your stubbed configuration file",id:"step-2-update-your-stubbed-configuration-file",children:[],level:4},{value:"Step 3: Discover resources from your endpoint",id:"step-3-discover-resources-from-your-endpoint",children:[],level:4},{value:"Step 4: Inspect and trim your catalog",id:"step-4-inspect-and-trim-your-catalog",children:[],level:4}],level:3},{value:"Editing with <code>flowctl check</code>",id:"editing-with-flowctl-check",children:[],level:3},{value:"Config Manager",id:"config-manager",children:[],level:3},{value:"Flow UI",id:"flow-ui",children:[],level:3}],level:2},{value:"Configuration",id:"configuration",children:[{value:"Protecting secrets",id:"protecting-secrets",children:[{value:"Example: Protect a configuration",id:"example-protect-a-configuration",children:[],level:4},{value:"Example: Protect portions of a configuration",id:"example-protect-portions-of-a-configuration",children:[],level:4}],level:3},{value:"Connecting to endpoints on secure networks",id:"connecting-to-endpoints-on-secure-networks",children:[],level:3}],level:2},{value:"Available connectors",id:"available-connectors",children:[],level:2}],m={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connectors"},"Connectors"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Connectors")," are plugin components that bridge the gap between Flow\u2019s runtime and\nthe various endpoints from which you capture or materialize data.\nThey're packaged as Docker images, each encapsulating the details of working with\na particular kind of endpoint."),(0,i.kt)("p",null,"Flow\u2019s vision is to provide a common runtime against which any open connector may be run.\nToday Flow supports the\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.airbyte.io/understanding-airbyte/airbyte-specification"},"Airbyte specification"),"\nas well as Flow\u2019s low-latency gRPC protocols for captures and materializations."),(0,i.kt)("p",null,"Estuary is implementing a number of connectors,\nwith a particular focus on integrating high-performance technical systems.\nConnectors for SaaS APIs are already well-covered through Flow\u2019s support of\nAirbyte connectors and the ",(0,i.kt)("a",{parentName:"p",href:"https://www.singer.io"},"singer.io")," ecosystem.\nConnectors implemented by Estuary are dual-licensed under Apache 2.0 or MIT."),(0,i.kt)("h2",{id:"why-an-open-connector-architecture"},"Why an open connector architecture?"),(0,i.kt)("p",null,"Historically, data platforms have directly implemented integrations to external systems with which they interact.\nToday, there are simply so many systems and APIs that companies use,\nthat it\u2019s not feasible for a company to provide all possible integrations.\nUsers are forced to wait indefinitely while the platform works through their prioritized integration list."),(0,i.kt)("p",null,"An open connector architecture removes Estuary \u2014 or any company \u2014 as a bottleneck in the development of integrations.\nEstuary contributes open-source connectors to the ecosystem, and in turn is able to leverage connectors implemented by others.\nUsers are empowered to write their own connectors for esoteric systems not already covered by the ecosystem."),(0,i.kt)("p",null,"Furthermore, implementing a Docker-based community specification brings other important qualities to Estuary connectors:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cross-platform interoperability between Flow, Airbyte, and any other platform that supports the protocol"),(0,i.kt)("li",{parentName:"ul"},"The abilities to write connectors in any language and run them on any machine"),(0,i.kt)("li",{parentName:"ul"},"Built-in solutions for version management (through image tags) and distribution"),(0,i.kt)("li",{parentName:"ul"},"The ability to integrate connectors from different sources at will, without the centralized control of a single company, thanks to container image registries")),(0,i.kt)("h2",{id:"using-connectors"},"Using connectors"),(0,i.kt)("p",null,"Connectors are packaged as ",(0,i.kt)("a",{parentName:"p",href:"https://opencontainers.org/"},"Open Container")," (Docker) images,\nand can be discovered, tagged, and pulled using\n",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/"},"Docker Hub"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry"},"GitHub Container registry"),",\nor any other public image registry provider."),(0,i.kt)("p",null,"To interface with a connector, the Flow runtime needs to know:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The specific image to use, through an image name such as ",(0,i.kt)("inlineCode",{parentName:"p"},"ghcr.io/estuary/source-postgres:dev"),".\nNotice that the image name also conveys the specific image registry and version tag to use.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Endpoint configuration such as a database address and account, with meaning that is specific to the connector.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Resource configuration such as a specific database table to capture, which is also specific to the connector."))),(0,i.kt)("p",null,"To integrate a connector within your dataflow,\nyou define all three components within your catalog specification:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"materializations:\n  acmeCo/postgres-views:\n    endpoint:\n      connector:\n        # 1: Provide the image that implements your endpoint connector.\n        image: ghcr.io/estuary/materialize-postgres:dev\n        # 2: Provide endpoint configuration that the connector requires.\n        config:\n          host: localhost\n          password: password\n          database: postgres\n          user: postgres\n          port: 5432\n    bindings:\n      - source: acmeCo/products/anvils\n        # 3: Provide resource configuration for the binding between the Flow\n        #    collection and the endpoint resource. This connector interfaces\n        #    with a SQL database and its resources are database tables. Here,\n        #    we provide a table to create and materialize which is bound to the\n        #    `acmeCo/products/anvils` source collection.\n        resource:\n          table: anvil_products\n\n      # Multiple resources can be configured through a single connector.\n      # Bind additional collections to tables as part of this connector instance:\n      - source: acmeCo/products/TNT\n        resource:\n          table: tnt_products\n\n      - source: acmeCo/customers\n        resource:\n          table: customers\n")),(0,i.kt)("p",null,"In some cases, you may be comfortable writing out the required configuration of your connector.\nOften, you don't know what configuration a connector requires ahead of time,\nor you may simply prefer a more guided workflow."),(0,i.kt)("p",null,"For this reason, connectors offer APIs that specify the configuration they may require,\nor the resources they may have available.\nFlow uses these APIs to offer guided workflows for easy configuration and usage of connectors."),(0,i.kt)("p",null,"The different processes you can use to implement connectors are each described below in general terms.\nConfiguration details for each connector are described on their individual pages."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Estuary is implementing better UI-driven workflows to easily\nconfigure and use connectors, expected by Q2 2022.\nThe support offered today is rudimentary."))),(0,i.kt)("h3",{id:"flowctl-discover"},(0,i.kt)("inlineCode",{parentName:"h3"},"flowctl discover")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/concepts/flowctl"},(0,i.kt)("inlineCode",{parentName:"a"},"flowctl"))," command-line tool offers a rudimentary guided workflow\nfor creating a connector instance through the ",(0,i.kt)("inlineCode",{parentName:"p"},"discover")," sub-command"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"discover")," generates a catalog source file. It includes the capture specification\nas well as recommended ",(0,i.kt)("strong",{parentName:"p"},"collections"),", which are bound to each captured resource of the endpoint.\nThis makes the ",(0,i.kt)("inlineCode",{parentName:"p"},"discover")," workflow a quick way to start setting up a new data flow."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Limitation")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"flowctl discover")," can fully scaffold catalog captures.\nYou can also use ",(0,i.kt)("inlineCode",{parentName:"p"},"flowctl discover"),"\nto create stub configuration files for materialization connectors,\nbut the remainder of the materialization must be written manually."))),(0,i.kt)("h4",{id:"step-1-generate-a-configuration-file-stub"},"Step 1: Generate a configuration file stub"),(0,i.kt)("p",null,"In your terminal, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ flowctl discover --image ghcr.io/estuary/${connector_name}:dev --prefix acmeCo/anvils\n\nCreating a connector configuration stub at /workspaces/flow/acmeCo/anvils/source-postgres.config.yaml.\nEdit and update this file, and then run this command again.\n")),(0,i.kt)("p",null,"This command takes a connector Docker ",(0,i.kt)("inlineCode",{parentName:"p"},"--image"),"\nand creates a configuration file stub,\nwhich by default is written to the ",(0,i.kt)("inlineCode",{parentName:"p"},"--prefix")," subdirectory of your current directory\n\u2014 in this case ",(0,i.kt)("inlineCode",{parentName:"p"},"./acmeCo/anvils/source-postgres.config.yaml"),"."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"A list of connector images can be found ",(0,i.kt)("a",{parentName:"p",href:"/reference/Connectors/capture-connectors/"},"here"),"."))),(0,i.kt)("h4",{id:"step-2-update-your-stubbed-configuration-file"},"Step 2: Update your stubbed configuration file"),(0,i.kt)("p",null,"Open and edit the generated config file.\nIt is pre-populated with configuration required by the connector,\ntheir default values, and descriptive comments:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'database: postgres\n# Logical database name to capture from.\n# [string] (required)\n\nhost: ""\n# Host name of the database to connect to.\n# [string] (required)\n\npassword: ""\n# User password configured within the database.\n# [string] (required)\n\nport: 5432\n# Host port of the database to connect to.\n# [integer] (required)\n')),(0,i.kt)("h4",{id:"step-3-discover-resources-from-your-endpoint"},"Step 3: Discover resources from your endpoint"),(0,i.kt)("p",null,"Run the same command\nto use your configuration file\nto complete the discovery workflow.\nFlow creates (or overwrites) a catalog source file within your directory,\nwhich includes a capture definition with one or more bindings,\ndefinitions of collections to support each binding,\nand associated collection schemas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ flowctl discover --image ghcr.io/estuary/${connector_name}:dev --prefix acmeCo/anvils\n\nCreated a Flow catalog at /workspaces/flow/acmeCo/anvils/source-postgres.flow.yaml\nwith discovered collections and capture bindings.\n")),(0,i.kt)("p",null,"The generated ",(0,i.kt)("inlineCode",{parentName:"p"},"${connector_name}.flow.yaml")," is the source file for your capture.\nIt will include a capture definition with one or more bindings,\nand the collection(s) created to contain documents from each bound endpoint resource.\nThe capture and all collections are named using your chosen ",(0,i.kt)("inlineCode",{parentName:"p"},"--prefix"),":"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"File Listing",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ find acmeCo/\nacmeCo/\nacmeCo/anvils\nacmeCo/anvils/source-postgres.flow.yaml\nacmeCo/anvils/source-postgres.config.yaml\nacmeCo/anvils/my_table.schema.yaml\nacmeCo/anvils/my_other_table.schema.yaml\n"))),(0,i.kt)(s.Z,{value:"source-postgres.flow.yaml",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"collections:\n  acmeCo/anvils/my_table:\n    schema: my_table.schema.yaml\n    key: [/the/primary, /key]\n  acmeCo/anvils/my_other_table:\n    schema: my_other_table.schema.yaml\n    key: [/other/key]\ncaptures:\n  acmeCo/anvils/source-postgres:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/source-postgres:dev\n        config: source-postgres.config.yaml\n    bindings:\n      - resource:\n          namespace: public\n          stream: my_table\n          syncMode: incremental\n        target: acmeCo/anvils/my_table\n      - resource:\n          namespace: public\n          stream: my_other_table\n          syncMode: incremental\n        target: acmeCo/anvils/my_other_table\n")))),(0,i.kt)("p",null,"You can repeat this step any number of times,\nto re-generate and update your catalog sources\nso that they reflect the endpoint's current resources."),(0,i.kt)("h4",{id:"step-4-inspect-and-trim-your-catalog"},"Step 4: Inspect and trim your catalog"),(0,i.kt)("p",null,"If you notice an undesired resources from the endpoint was included in the catalog spec,\nyou can remove its binding and corresponding collection to remove it from your catalog."),(0,i.kt)("h3",{id:"editing-with-flowctl-check"},"Editing with ",(0,i.kt)("inlineCode",{parentName:"h3"},"flowctl check")),(0,i.kt)("p",null,"You can directly write your capture or materialization in a catalog source file,\nand use ",(0,i.kt)("inlineCode",{parentName:"p"},"flowctl check")," to provide a fast feedback loop to determine what configuration\nmay be missing or incorrect."),(0,i.kt)("p",null,"This is the current supported path for creating materializations.\nTypically, you will have already have a catalog spec with a capture and collections using ",(0,i.kt)("inlineCode",{parentName:"p"},"discover"),".\nNow, you're simply adding a materialization to complete the dataflow."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Find your ",(0,i.kt)("a",{parentName:"li",href:"/reference/Connectors/materialization-connectors/"},"materialization connector"),"\nand use the provided code sample as a template."),(0,i.kt)("li",{parentName:"ol"},"Fill in the required values and other values, if desired."),(0,i.kt)("li",{parentName:"ol"},"Add as many additional bindings as you need.\nAs with captures, each collection in your catalog must have an individual binding\nto be connected to the endpoint system."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"flowctl check")," to verify that the connector can reach the endpoint system,\nand that all configuration is correct.")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Flow integrates with VS Code and other editors to offer auto-complete within catalog source files,\nwhich makes it easier to write and structure your files."))),(0,i.kt)("h3",{id:"config-manager"},"Config Manager"),(0,i.kt)("p",null,"This method is for Beta clients using Flow as a managed service."),(0,i.kt)("p",null,"The Estuary Config Manager acts and feels like a simple user interface. In practice,\nit's a secure way to collect the configurations details for your use case, so that\nEstuary engineers can create and start your dataflow."),(0,i.kt)("p",null,"To use it, simply select your desired connector from the drop-down menu and fill out the required fields."),(0,i.kt)("h3",{id:"flow-ui"},"Flow UI"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Beta")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Flow UI is still undergoing development and will be available, with detailed\ndocumentation, in Q2 2022."))),(0,i.kt)("p",null,"The Flow user interface is an alternative to the GitOps workflow,\nbut both provide the same results and can be used interchangeably to work with the same Flow catalog."),(0,i.kt)("p",null,"In the UI, you select the connector you want to use and populate the fields that appear."),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Connectors interface with external systems and universally require endpoint configuration,\nsuch as a database hostname or account credentials,\nwhich must be provided to the connector for it to function.\nWhen directly working with catalog source files,\nyou have the option of inlining the configuration into your connector\nor storing it in separate files:"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"Inline",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="my.flow.yaml"',title:'"my.flow.yaml"'},"materializations:\n  acmeCo/postgres-views:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/materialize-postgres:dev\n        config:\n          host: localhost\n          password: password\n          database: postgres\n          user: postgres\n          port: 5432\n      bindings: []\n"))),(0,i.kt)(s.Z,{value:"Referenced file",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="my.flow.yaml"',title:'"my.flow.yaml"'},"materializations:\n  acmeCo/postgres-views:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/materialize-postgres:dev\n        config: my.config.yaml\n      bindings: []\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="my.config.yaml"',title:'"my.config.yaml"'},"host: localhost\npassword: password\ndatabase: postgres\nuser: postgres\nport: 5432\n")))),(0,i.kt)("p",null,"Storing configuration in separate files serves two important purposes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Re-use of configuration across multiple captures or materializations"),(0,i.kt)("li",{parentName:"ul"},"The ability to protect sensitive credentials")),(0,i.kt)("h3",{id:"protecting-secrets"},"Protecting secrets"),(0,i.kt)("p",null,"Most endpoint systems require credentials of some kind,\nsuch as a username or password."),(0,i.kt)("p",null,"Directly storing secrets in files that are versioned in Git is poor practice.\nSimilarly, sensitive credentials should be protected while not in use within Flow's runtime as well.\nThe only time a credential needs to be directly accessed is when it's\nrequired by Flow's runtime for the purposes of instantiating the connector."),(0,i.kt)("p",null,"Flow integrates with Mozilla\u2019s ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/sops"},"sops")," tool,\nwhich can encrypt and protect credentials within a GitOps-managed catalog.\nFlow's runtime similarly stores a ",(0,i.kt)("inlineCode",{parentName:"p"},"sops"),"-protected configuration in its encrypted form,\nand decrypts it only when invoking a connector on the user\u2019s behalf."),(0,i.kt)("p",null,"sops, short for \u201cSecrets Operations,\u201d is a tool that encrypts the values of a JSON or YAML document\nagainst a key management system (KMS) such as Google Cloud Platform KMS, Azure Key Vault, or Hashicorp Vault.\nEncryption or decryption of a credential with ",(0,i.kt)("inlineCode",{parentName:"p"},"sops")," is an active process:\nit requires that the user (or the Flow runtime identity) have a current authorization to the required KMS,\nand creates a request trace which can be logged and audited.\nIt's also possible to revoke access to the KMS,\nwhich immediately and permanently removes access to the protected credential."),(0,i.kt)("h4",{id:"example-protect-a-configuration"},"Example: Protect a configuration"),(0,i.kt)("p",null,"Suppose you're given a connector configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},'host: my.hostname\npassword: "this is sensitive!"\nuser: my-user\n')),(0,i.kt)("p",null,"You can protect it using a Google KMS key that you own:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Login to Google Cloud and initialize application default credentials used by `sops`.\n$ gcloud auth application-default login\n# Use `sops` to re-write the configuration document in place, protecting its values.\n$ sops --encrypt --in-place --gcp-kms projects/your-project-id/locations/us-central1/keyRings/your-ring/cryptoKeys/your-key-name config.yaml\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"sops")," re-writes the file, wrapping each value in an encrypted envelope and adding a ",(0,i.kt)("inlineCode",{parentName:"p"},"sops")," metadata section:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},'host: ENC[AES256_GCM,data:K/clly65pThTg2U=,iv:1bNmY8wjtjHFBcXLR1KFcsNMGVXRl5LGTdREUZIgcEU=,tag:5GKcguVPihXXDIM7HHuNnA==,type:str]\npassword: ENC[AES256_GCM,data:IDDY+fl0/gAcsH+6tjRdww+G,iv:Ye8st7zJ9wsMRMs6BoAyWlaJeNc9qeNjkkjo6BPp/tE=,tag:EPS9Unkdg4eAFICGujlTfQ==,type:str]\nuser: ENC[AES256_GCM,data:w+F7MMwQhw==,iv:amHhNCJWAJnJaGujZgjhzVzUZAeSchEpUpBau7RVeCg=,tag:62HguhnnSDqJdKdwYnj7mQ==,type:str]\nsops:\n    # Some items omitted for brevity:\n    gcp_kms:\n        - resource_id: projects/your-project-id/locations/us-central1/keyRings/your-ring/cryptoKeys/your-key-name\n          created_at: "2022-01-05T15:49:45Z"\n          enc: CiQAW8BC2GDYWrJTp3ikVGkTI2XaZc6F4p/d/PCBlczCz8BZiUISSQCnySJKIptagFkIl01uiBQp056c\n    lastmodified: "2022-01-05T15:49:45Z"\n    version: 3.7.1\n')),(0,i.kt)("p",null,"You then use this ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," within your Flow catalog.\nThe Flow runtime knows that this document is protected by ",(0,i.kt)("inlineCode",{parentName:"p"},"sops"),"\nwill continue to store it in its protected form,\nand will attempt a decryption only when invoking a connector on your behalf."),(0,i.kt)("p",null,"If you need to make further changes to your configuration,\nedit it using ",(0,i.kt)("inlineCode",{parentName:"p"},"sops config.yaml"),".\nIt's not required to provide the KMS key to use again,\nas ",(0,i.kt)("inlineCode",{parentName:"p"},"sops")," finds it within its metadata section."),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When deploying catalogs onto the managed Flow runtime,\nyou must grant access to decrypt your GCP KMS key to the Flow runtime service agent,\nwhich is:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"flow-258@helpful-kingdom-273219.iam.gserviceaccount.com\n")))),(0,i.kt)("h4",{id:"example-protect-portions-of-a-configuration"},"Example: Protect portions of a configuration"),(0,i.kt)("p",null,"Endpoint configurations are typically a mix of sensitive and non-sensitive values.\nIt can be cumbersome when ",(0,i.kt)("inlineCode",{parentName:"p"},"sops")," protects an entire configuration document as you\nlose visibility into non-sensitive values, which you might prefer to store as\ncleartext for ease of use."),(0,i.kt)("p",null,"You can use the encrypted-suffix feature of ",(0,i.kt)("inlineCode",{parentName:"p"},"sops")," to selectively protect credentials:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},'host: my.hostname\npassword_sops: "this is sensitive!"\nuser: my-user\n')),(0,i.kt)("p",null,"Notice that ",(0,i.kt)("inlineCode",{parentName:"p"},"password")," in this configuration has an added ",(0,i.kt)("inlineCode",{parentName:"p"},"_sops")," suffix.\nNext, encrypt only values which have that suffix:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ sops --encrypt --in-place --encrypted-suffix "_sops" --gcp-kms projects/your-project-id/locations/us-central1/keyRings/your-ring/cryptoKeys/your-key-name config.yaml\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"sops"),' re-writes the file, wrapping only values having a "_sops" suffix and adding its ',(0,i.kt)("inlineCode",{parentName:"p"},"sops")," metadata section:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},'host: my.hostname\npassword_sops: ENC[AES256_GCM,data:dlfidMrHfDxN//nWQTPCsjoG,iv:DHQ5dXhyOOSKI6ZIzcUM67R6DD/2MSE4LENRgOt6GPY=,tag:FNs2pTlzYlagvz7vP/YcIQ==,type:str]\nuser: my-user\nsops:\n    # Some items omitted for brevity:\n    encrypted_suffix: _sops\n    gcp_kms:\n        - resource_id: projects/your-project-id/locations/us-central1/keyRings/your-ring/cryptoKeys/your-key-name\n          created_at: "2022-01-05T16:06:36Z"\n          enc: CiQAW8BC2Au779CGdMFUjWPhNleCTAj9rL949sBvPQ6eyAC3EdESSQCnySJKD3eWX8XrtrgHqx327\n    lastmodified: "2022-01-05T16:06:37Z"\n    version: 3.7.1\n')),(0,i.kt)("p",null,"You then use this ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," within your Flow catalog.\nFlow looks for and understands the ",(0,i.kt)("inlineCode",{parentName:"p"},"encrypted_suffix"),",\nand will remove this suffix from configuration keys before passing them to the connector."),(0,i.kt)("h3",{id:"connecting-to-endpoints-on-secure-networks"},"Connecting to endpoints on secure networks"),(0,i.kt)("p",null,"In some cases, your source or destination endpoint may be within a secure network, and you may not be able\nto allow direct access to its port due to your organization's security policy."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.ssh.com/academy/ssh/tunneling/example#local-forwarding"},"SHH tunneling"),", or port forwarding,\nprovides a means for Flow to access the port indirectly through an SSH server."),(0,i.kt)("p",null,"To set up and configure the SSH server, see the ",(0,i.kt)("a",{parentName:"p",href:"../../guides/connect-network/"},"guide"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Beta")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Currently, Flow supports SSH tunneling for all ",(0,i.kt)("a",{parentName:"p",href:"/reference/Connectors/materialization-connectors/"},"materialization connectors"),".\nTunneling is only supported on certain capture connectors; consult the ",(0,i.kt)("a",{parentName:"p",href:"/reference/Connectors/capture-connectors/"},"appropriate capture connector's documentation")," to check if it is supported.\nThe SSH configurations for captures and materializations are somewhat different.\nEstuary plans to support SSH tunneling on all connectors in the future using the same configuration."))),(0,i.kt)("p",null,"After verifying that the connector is supported, you can add the configuration to the capture or materialization\ndefinition to enable SSH tunneling."),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"Capture connectors",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="source-postgres-ssh-tunnel.flow.yaml"',title:'"source-postgres-ssh-tunnel.flow.yaml"'},"captures:\n  acmeCo/postgres-capture-ssh:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/source-postgres:dev\n        config:\n          # When using a proxy like SSH tunneling, set to localhost\n          host: localhost\n          # Specify an open port on your local machine to connect to the proxy.\n          port: 15432\n          database: flow\n          user: flow_user\n          password: secret\n          proxy:\n            proxyType: ssh_forwarding\n            sshForwarding:\n              # Port on the local machine from which you'll connect to the SSH server.\n              # If a port is specified elsewhere in the connector configuration, it must match.\n              localPort: 15432\n              # Port of the final endpoint to which you\u2019ll connect via\n              # tunneling from the SSH server.\n              forwardPort: 5432\n              # Host or IP address of the final endpoint to which you\u2019ll\n              # connect via tunneling from the SSH server\n              forwardHost: 127.0.0.1\n              # Location of the remote SSH server that supports tunneling.\n              # Formatted as ssh://hostname[:port].\n              sshEndpoint: ssh://198.21.98.1\n              # Username to connect to the SSH server.\n              user: sshUser\n              # Private key to connect to the SSH server, formatted as multiline plaintext.\n              # Use the YAML literal block style with the indentation indicator.\n              # See https://yaml-multiline.info/ for details.\n              privateKey: |2\n                -----BEGIN RSA PRIVATE KEY-----\n                MIICXAIBAAKBgQCJO7G6R+kv2MMS8Suw21sk2twHg8Vog0fjimEWJEwyAfFM/Toi\n                EJ6r5RTaSvN++/+MPWUll7sUdOOBZr6ErLKLHEt7uXxusAzOjMxFKZpEARMcjwHY\n                v/tN1A2OYU0qay1DOwknEE0i+/Bvf8lMS7VDjHmwRaBtRed/+iAQHf128QIDAQAB\n                AoGAGoOUBP+byAjDN8esv1DCPU6jsDf/Tf//RbEYrOR6bDb/3fYW4zn+zgtGih5t\n                CR268+dwwWCdXohu5DNrn8qV/Awk7hWp18mlcNyO0skT84zvippe+juQMK4hDQNi\n                ywp8mDvKQwpOuzw6wNEitcGDuACx5U/1JEGGmuIRGx2ST5kCQQDsstfWDcYqbdhr\n                5KemOPpu80OtBYzlgpN0iVP/6XW1e5FCRp2ofQKZYXVwu5txKIakjYRruUiiZTza\n                QeXRPbp3AkEAlGx6wMe1l9UtAAlkgCFYbuxM+eRD4Gg5qLYFpKNsoINXTnlfDry5\n                +1NkuyiQDjzOSPiLZ4Abpf+a+myjOuNL1wJBAOwkdM6aCVT1J9BkW5mrCLY+PgtV\n                GT80KTY/d6091fBMKhxL5SheJ4SsRYVFtguL2eA7S5xJSpyxkadRzR0Wj3sCQAvA\n                bxO2fE1SRqbbF4cBnOPjd9DNXwZ0miQejWHUwrQO0inXeExNaxhYKQCcnJNUAy1J\n                6JfAT/AbxeSQF3iBKK8CQAt5r/LLEM1/8ekGOvBh8MAQpWBW771QzHUN84SiUd/q\n                xR9mfItngPwYJ9d/pTO7u9ZUPHEoat8Ave4waB08DsI=\n                -----END RSA PRIVATE KEY-----\n        bindings: []\n"))),(0,i.kt)(s.Z,{value:"Materialization connectors",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="materialize-postgres-ssh-tunnel.flow.yaml"',title:'"materialize-postgres-ssh-tunnel.flow.yaml"'},"materializations:\n  acmeCo/postgres-materialize-ssh:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/materialize-postgres:dev\n        config:\n          # When using a proxy like SSH tunneling, set to localhost\n          host: localhost\n          # Specify an open port on your local machine to connect to the proxy.\n          port: 15432\n          database: flow\n          user: flow_user\n          password: secret\n          networkTunnel:\n            sshForwarding:\n              # Port on the local machine from which you'll connect to the SSH server.\n              # If a port is specified elsewhere in the connector configuration, it must match.\n              localPort: 15432\n              # Host or IP address of the final endpoint to which you\u2019ll\n              # connect via tunneling from the SSH server\n              forwardHost: 127.0.0.1\n              # Port of the final endpoint to which you\u2019ll connect via\n              # tunneling from the SSH server.\n              forwardPort: 5432\n              # Location of the remote SSH server that supports tunneling.\n              # Formatted as ssh://hostname[:port].\n              sshEndpoint: ssh://198.21.98.1\n              # Username to connect to the SSH server.\n              user: sshUser\n              # Private key to connect to the SSH server, formatted as multiline plaintext.\n              # Use the YAML literal block style with the indentation indicator.\n              # See https://yaml-multiline.info/ for details.\n              privateKey: |2\n                -----BEGIN RSA PRIVATE KEY-----\n                MIICXAIBAAKBgQCJO7G6R+kv2MMS8Suw21sk2twHg8Vog0fjimEWJEwyAfFM/Toi\n                EJ6r5RTaSvN++/+MPWUll7sUdOOBZr6ErLKLHEt7uXxusAzOjMxFKZpEARMcjwHY\n                v/tN1A2OYU0qay1DOwknEE0i+/Bvf8lMS7VDjHmwRaBtRed/+iAQHf128QIDAQAB\n                AoGAGoOUBP+byAjDN8esv1DCPU6jsDf/Tf//RbEYrOR6bDb/3fYW4zn+zgtGih5t\n                CR268+dwwWCdXohu5DNrn8qV/Awk7hWp18mlcNyO0skT84zvippe+juQMK4hDQNi\n                ywp8mDvKQwpOuzw6wNEitcGDuACx5U/1JEGGmuIRGx2ST5kCQQDsstfWDcYqbdhr\n                5KemOPpu80OtBYzlgpN0iVP/6XW1e5FCRp2ofQKZYXVwu5txKIakjYRruUiiZTza\n                QeXRPbp3AkEAlGx6wMe1l9UtAAlkgCFYbuxM+eRD4Gg5qLYFpKNsoINXTnlfDry5\n                +1NkuyiQDjzOSPiLZ4Abpf+a+myjOuNL1wJBAOwkdM6aCVT1J9BkW5mrCLY+PgtV\n                GT80KTY/d6091fBMKhxL5SheJ4SsRYVFtguL2eA7S5xJSpyxkadRzR0Wj3sCQAvA\n                bxO2fE1SRqbbF4cBnOPjd9DNXwZ0miQejWHUwrQO0inXeExNaxhYKQCcnJNUAy1J\n                6JfAT/AbxeSQF3iBKK8CQAt5r/LLEM1/8ekGOvBh8MAQpWBW771QzHUN84SiUd/q\n                xR9mfItngPwYJ9d/pTO7u9ZUPHEoat8Ave4waB08DsI=\n                -----END RSA PRIVATE KEY-----\n        bindings: []\n")))),(0,i.kt)("h2",{id:"available-connectors"},"Available connectors"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/reference/Connectors/"},"Learn about available connectors in the reference section")))}h.isMDXComponent=!0}}]);