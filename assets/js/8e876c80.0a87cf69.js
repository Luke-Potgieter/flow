"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5039],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(n),m=r,f=l["".concat(s,".").concat(m)]||l[m]||d[m]||a;return n?o.createElement(f,c(c({ref:t},u),{},{components:n})):o.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[l]="string"==typeof e?e:r,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},c="Captures",i={unversionedId:"concepts/captures",id:"concepts/captures",title:"Captures",description:"A capture is how Flow ingests data from an external source.",source:"@site/docs/concepts/captures.md",sourceDirName:"concepts",slug:"/concepts/captures",permalink:"/concepts/captures",draft:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/concepts/captures.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Catalog",permalink:"/concepts/catalogs"},next:{title:"Collections",permalink:"/concepts/collections"}},s={},p=[{value:"Pull captures",id:"pull-captures",level:2},{value:"Estuary sources",id:"estuary-sources",level:3},{value:"Airbyte sources",id:"airbyte-sources",level:3},{value:"Discovery",id:"discovery",level:3},{value:"Specification",id:"specification",level:3},{value:"Push captures",id:"push-captures",level:2},{value:"Specification",id:"specification-1",level:3}],u={toc:p},l="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(l,(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"captures"},"Captures"),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"capture")," is how Flow ingests data from an external source.\nEvery Data Flow starts with a capture."),(0,r.kt)("p",null,"Captures are a type of Flow ",(0,r.kt)("strong",{parentName:"p"},"task"),".\nThey connect to an external data source, or ",(0,r.kt)("strong",{parentName:"p"},"endpoint"),",\nand bind one or more of its resources, such as database tables.\nEach binding adds documents to a corresponding Flow ",(0,r.kt)("strong",{parentName:"p"},"collection"),"."),(0,r.kt)("p",null,"Captures run continuously:\nas soon as new documents are made available at the endpoint resources,\nFlow validates their schema and adds them to the appropriate collection.\nCaptures can process ",(0,r.kt)("a",{parentName:"p",href:"/concepts/collections#documents"},"documents")," up to 16 MB in size."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(6542).Z,width:"960",height:"540"})),(0,r.kt)("p",null,"You define and configure captures in ",(0,r.kt)("strong",{parentName:"p"},"Flow specifications"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/guides/create-dataflow#create-a-capture"},"See the guide to create a capture")),(0,r.kt)("h2",{id:"pull-captures"},"Pull captures"),(0,r.kt)("p",null,"Pull captures pull data from an endpoint using a ",(0,r.kt)("a",{parentName:"p",href:"../#connectors"},"connector"),"."),(0,r.kt)("h3",{id:"estuary-sources"},"Estuary sources"),(0,r.kt)("p",null,"Estuary builds and maintains many real-time connectors for various technology systems,\nsuch as database change data capture (CDC) connectors."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/reference/Connectors/capture-connectors/"},"source connector reference documentation"),"."),(0,r.kt)("h3",{id:"airbyte-sources"},"Airbyte sources"),(0,r.kt)("p",null,"Flow also natively supports Airbyte source connectors.\nThese connectors tend to focus on SaaS APIs, and do not offer real-time streaming integrations.\nFlow runs the connector at regular intervals to capture updated documents."),(0,r.kt)("p",null,"Airbyte source connectors are independently reviewed and sometime updated for compatibility with Flow.\nEstuary's ",(0,r.kt)("a",{parentName:"p",href:"/reference/Connectors/capture-connectors/"},"source connectors")," documentation includes actively supported Airbyte connectors.\nA full list of Airbyte's connectors is available at ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/airbyte?page=1"},"Airbyte docker hub"),".\nIf you see a connector you'd like to prioritize for access in the Flow web app, ",(0,r.kt)("a",{parentName:"p",href:"mailto:support@estuary.dev"},"contact us"),"."),(0,r.kt)("h3",{id:"discovery"},"Discovery"),(0,r.kt)("p",null,"To help you configure new pull captures, Flow offers the guided ",(0,r.kt)("strong",{parentName:"p"},"discovery")," workflow in the Flow web application."),(0,r.kt)("p",null,"To begin discovery, you tell Flow the connector you'd like to use and basic information about the endpoint.\nFlow automatically generates a capture configuration for you. It identifies one or more\n",(0,r.kt)("strong",{parentName:"p"},"resources")," \u2014 tables, data streams, or the equivalent \u2014 and generates ",(0,r.kt)("strong",{parentName:"p"},"bindings")," so that each will be mapped to a\ndata collection in Flow."),(0,r.kt)("p",null,"You may then modify the generated configuration as needed before publishing the capture."),(0,r.kt)("h3",{id:"specification"},"Specification"),(0,r.kt)("p",null,"Pull captures are defined in Flow specification files per the following format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# A set of captures to include in the catalog.\n# Optional, type: object\ncaptures:\n  # The name of the capture.\n  acmeCo/example/source-s3:\n    # Endpoint defines how to connect to the source of the capture.\n    # Required, type: object\n    endpoint:\n      # This endpoint uses a connector provided as a Docker image.\n      connector:\n        # Docker image that implements the capture connector.\n        image: ghcr.io/estuary/source-s3:dev\n        # File that provides the connector's required configuration.\n        # Configuration may also be presented inline.\n        config: path/to/connector-config.yaml\n\n    # Bindings define how collections are populated from the data source.\n    # A capture may bind multiple resources to different collections.\n    # Required, type: array\n    bindings:\n      - # The target collection to capture into.\n        # This may be defined in a separate, imported specification file.\n        # Required, type: string\n        target: acmeCo/example/collection\n\n        # The resource is additional configuration required by the endpoint\n        # connector to identify and capture a specific endpoint resource.\n        # The structure and meaning of this configuration is defined by\n        # the specific connector.\n        # Required, type: object\n        resource:\n          stream: a-bucket/and-prefix\n          # syncMode should be set to incremental for all Estuary connectors\n          syncMode: incremental\n\n      - target: acmeCo/example/another-collection\n        resource:\n          stream: a-bucket/another-prefix\n          syncMode: incremental\n")),(0,r.kt)("h2",{id:"push-captures"},"Push captures"),(0,r.kt)("p",null,"Push captures expose an endpoint to which documents may be pushed using a supported ingestion protocol."),(0,r.kt)("admonition",{title:"Beta",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Push captures are under development.\nEstuary intends to offer Webhook, Websocket, and Kafka-compatible APIs for capturing into collections.\nJoin the ",(0,r.kt)("a",{parentName:"p",href:"https://estuary-dev.slack.com/join/shared_invite/enQtNjQxMzgyNTEzNzk1LTU0ZjZlZmY5ODdkOTEzZDQzZWU5OTk3ZTgyNjY1ZDE1M2U1ZTViMWQxMThiMjU1N2MwOTlhMmVjYjEzMjEwMGQ#/shared-invite/email"},"Estuary Slack")," for more information on this and other ongoing development work.")),(0,r.kt)("h3",{id:"specification-1"},"Specification"),(0,r.kt)("p",null,"Push capture configurations use the following general format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"captures:\n\n  # The name of the capture.\n  acmeCo/example/webhook-ingest:\n    endpoint:\n      # This endpoint is an ingestion.\n      ingest: {}\n\n    bindings:\n      - # The target collection to capture into.\n        target: acmeCo/example/webhooks\n        # The resource configures the specific behavior of the ingestion endpoint.\n        resource:\n          name: webhooks\n")))}d.isMDXComponent=!0},6542:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/captures-new-4479ed989de046cd79db471d502bfc89.svg"}}]);