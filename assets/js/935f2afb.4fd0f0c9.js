"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Who should use Flow?","href":"/overview/who-should-use-flow","docId":"overview/who-should-use-flow"},{"type":"link","label":"Comparisons","href":"/overview/comparisons","docId":"overview/comparisons"}],"href":"/"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Setting up a development environment","href":"/getting-started/installation","docId":"getting-started/installation"},{"type":"category","label":"Flow Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Your first data flow","href":"/getting-started/flow-tutorials/hello-flow","docId":"getting-started/flow-tutorials/hello-flow"}],"href":"/getting-started/flow-tutorials/"}]},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Captures","href":"/concepts/captures","docId":"concepts/captures"},{"type":"link","label":"Collections","href":"/concepts/collections","docId":"concepts/collections"},{"type":"link","label":"Connectors","href":"/concepts/connectors","docId":"concepts/connectors"},{"type":"link","label":"Derivations","href":"/concepts/derivations","docId":"concepts/derivations"},{"type":"link","label":"flowctl","href":"/concepts/flowctl","docId":"concepts/flowctl"},{"type":"link","label":"Imports","href":"/concepts/import","docId":"concepts/import"},{"type":"link","label":"Journals","href":"/concepts/journals","docId":"concepts/journals"},{"type":"link","label":"Materializations","href":"/concepts/materialization","docId":"concepts/materialization"},{"type":"link","label":"Projections","href":"/concepts/projections","docId":"concepts/projections"},{"type":"link","label":"Schemas","href":"/concepts/schemas","docId":"concepts/schemas"},{"type":"link","label":"Task Shards","href":"/concepts/shards","docId":"concepts/shards"},{"type":"link","label":"Storage Mappings","href":"/concepts/storage-mappings","docId":"concepts/storage-mappings"},{"type":"link","label":"Tests","href":"/concepts/tests","docId":"concepts/tests"}],"href":"/concepts/"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a simple data flow","href":"/guides/create-dataflow","docId":"guides/create-dataflow"}]},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Reduction Strategies","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"append","href":"/reference/reduction-strategies/append","docId":"reference/reduction-strategies/append"},{"type":"link","label":"Composing with conditionals","href":"/reference/reduction-strategies/composing-with-conditionals","docId":"reference/reduction-strategies/composing-with-conditionals"},{"type":"link","label":"firstWriteWins and lastWriteWins","href":"/reference/reduction-strategies/firstwritewins-and-lastwritewins","docId":"reference/reduction-strategies/firstwritewins-and-lastwritewins"},{"type":"link","label":"merge","href":"/reference/reduction-strategies/merge","docId":"reference/reduction-strategies/merge"},{"type":"link","label":"minimize and maximize","href":"/reference/reduction-strategies/minimize-and-maximize","docId":"reference/reduction-strategies/minimize-and-maximize"},{"type":"link","label":"set","href":"/reference/reduction-strategies/set","docId":"reference/reduction-strategies/set"},{"type":"link","label":"sum","href":"/reference/reduction-strategies/sum","docId":"reference/reduction-strategies/sum"}],"href":"/reference/reduction-strategies/"},{"type":"link","label":"Organizing a Flow Catalog","href":"/reference/organizing-catalogs","docId":"reference/organizing-catalogs"},{"type":"category","label":"Connectors","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Capture connectors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MySQL","href":"/reference/Connectors/capture-connectors/MySQL","docId":"reference/Connectors/capture-connectors/MySQL"},{"type":"link","label":"PostgreSQL","href":"/reference/Connectors/capture-connectors/PostgreSQL","docId":"reference/Connectors/capture-connectors/PostgreSQL"}],"href":"/reference/Connectors/capture-connectors/"},{"type":"category","label":"Materialization connectors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Rockset","href":"/reference/Connectors/materialization-connectors/Rockset","docId":"reference/Connectors/materialization-connectors/Rockset"}],"href":"/reference/Connectors/materialization-connectors/"}],"href":"/reference/Connectors/"}]}]},"docs":{"concepts/captures":{"id":"concepts/captures","title":"Captures","description":"A capture is a catalog task which connects to an endpoint","sidebar":"tutorialSidebar"},"concepts/collections":{"id":"concepts/collections","title":"Collections","description":"Flow stores data in collections:","sidebar":"tutorialSidebar"},"concepts/connectors":{"id":"concepts/connectors","title":"Connectors","description":"Flow\u2019s vision is to provide a common runtime against which any open connector may be run.","sidebar":"tutorialSidebar"},"concepts/derivations":{"id":"concepts/derivations","title":"Derivations","description":"A derivation is a collection","sidebar":"tutorialSidebar"},"concepts/flowctl":{"id":"concepts/flowctl","title":"flowctl","description":"The flowctl command-line interface is used to test, develop, and deploy Flow catalogs.","sidebar":"tutorialSidebar"},"concepts/import":{"id":"concepts/import","title":"Imports","description":"The import section is a list of partial or absolute URLs","sidebar":"tutorialSidebar"},"concepts/journals":{"id":"concepts/journals","title":"Journals","description":"Journals are an advanced concept of Flow.","sidebar":"tutorialSidebar"},"concepts/materialization":{"id":"concepts/materialization","title":"Materializations","description":"Materializations are the means by which Flow pushes collections into your destination endpoints:","sidebar":"tutorialSidebar"},"concepts/projections":{"id":"concepts/projections","title":"Projections","description":"Flow documents are arbitrary JSON, and may contain multiple levels of hierarchy and nesting.","sidebar":"tutorialSidebar"},"concepts/README":{"id":"concepts/README","title":"Concepts","description":"Flow helps you define data pipelines that connect your data systems, APIs, and storage, and optionally transform data along the way.","sidebar":"tutorialSidebar"},"concepts/schemas":{"id":"concepts/schemas","title":"Schemas","description":"Flow documents and collections always have an associated schema","sidebar":"tutorialSidebar"},"concepts/shards":{"id":"concepts/shards","title":"Task Shards","description":"Task shards are an advanced concept of Flow.","sidebar":"tutorialSidebar"},"concepts/storage-mappings":{"id":"concepts/storage-mappings","title":"Storage Mappings","description":"A storage mapping defines how Flow should persist the documents of collections into cloud storage locations, such as a user\u2019s S3 bucket. When you first set up Flow, a default storage mapping is created for you, in which all collections will be stored by default. However, you can also override this default for one or more collections by specifying a storage mapping in your catalog specification.","sidebar":"tutorialSidebar"},"concepts/tests":{"id":"concepts/tests","title":"Tests","description":"As Flow catalogs grow in breadth and scope, and as requirements change or new contributors get involved,","sidebar":"tutorialSidebar"},"getting-started/flow-tutorials/hello-flow":{"id":"getting-started/flow-tutorials/hello-flow","title":"Your first data flow","description":"Create your first end-to-end data flow.","sidebar":"tutorialSidebar"},"getting-started/flow-tutorials/README":{"id":"getting-started/flow-tutorials/README","title":"Flow tutorials","description":"How to use the tutorials to get oriented with Flow","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Setting up a development environment","description":"Get set up to run Flow for local development.","sidebar":"tutorialSidebar"},"guides/create-dataflow":{"id":"guides/create-dataflow","title":"Create a simple data flow","description":"Whether you\'re learning to use Flow or testing a new pipeline, much of your work will take place in a local or virtual environment. This guide outlines the basic steps to create and deploy a data flow using Flow\'s current GitOps workflow.","sidebar":"tutorialSidebar"},"overview/comparisons":{"id":"overview/comparisons","title":"Comparisons","description":"High level explanations of Flow in terms of the systems you already know","sidebar":"tutorialSidebar"},"overview/README":{"id":"overview/README","title":"Flow documentation","description":"Get to know Estuary Flow and learn how to get started.","sidebar":"tutorialSidebar"},"overview/who-should-use-flow":{"id":"overview/who-should-use-flow","title":"Who should use Flow?","description":"Common pain points you might have, and how Flow addresses them.","sidebar":"tutorialSidebar"},"reference/Connectors/capture-connectors/MySQL":{"id":"reference/Connectors/capture-connectors/MySQL","title":"MySQL","description":"This is a change data capture (CDC) connector that captures change events from a MySQL database via the Binary Log.","sidebar":"tutorialSidebar"},"reference/Connectors/capture-connectors/PostgreSQL":{"id":"reference/Connectors/capture-connectors/PostgreSQL","title":"PostgreSQL","description":"This connector uses change data capture (CDC) to continuously capture updates in a PostgreSQL database into one or more Flow collections.","sidebar":"tutorialSidebar"},"reference/Connectors/capture-connectors/README":{"id":"reference/Connectors/capture-connectors/README","title":"Capture connectors","description":"Estuary\'s available capture connectors are listed in this section. Each connector has a unique configuration you must follow in your catalog specification; these will be linked below the connector name.","sidebar":"tutorialSidebar"},"reference/Connectors/materialization-connectors/README":{"id":"reference/Connectors/materialization-connectors/README","title":"Materialization connectors","description":"Estuary\'s available materialization connectors are listed in this section. Each connector has a unique configuration you must follow in your catalog specification; these will be linked below the connector name.","sidebar":"tutorialSidebar"},"reference/Connectors/materialization-connectors/Rockset":{"id":"reference/Connectors/materialization-connectors/Rockset","title":"Rockset","description":"This Flow connector materializes delta updates of your Flow collections into Rockset collections.","sidebar":"tutorialSidebar"},"reference/Connectors/README":{"id":"reference/Connectors/README","title":"Connectors","description":"A current list and configuration details for Estuary\'s connectors can be found on the following pages:","sidebar":"tutorialSidebar"},"reference/organizing-catalogs":{"id":"reference/organizing-catalogs","title":"Organizing a Flow Catalog","description":"It\'s not necessary to store the entire catalog spec in one YAML file, and Flow provides the flexibility to reference other files which can be managed independently. You may want to do so if:","sidebar":"tutorialSidebar"},"reference/reduction-strategies/append":{"id":"reference/reduction-strategies/append","title":"append","description":"Using the append reduction strategy","sidebar":"tutorialSidebar"},"reference/reduction-strategies/composing-with-conditionals":{"id":"reference/reduction-strategies/composing-with-conditionals","title":"Composing with conditionals","description":"Using conditionals statements to fine-tune reductions","sidebar":"tutorialSidebar"},"reference/reduction-strategies/firstwritewins-and-lastwritewins":{"id":"reference/reduction-strategies/firstwritewins-and-lastwritewins","title":"firstWriteWins and lastWriteWins","description":"Using the firstWriteWins and lastWriteWins reduction strategies","sidebar":"tutorialSidebar"},"reference/reduction-strategies/merge":{"id":"reference/reduction-strategies/merge","title":"merge","description":"Using the merge reduction strategy","sidebar":"tutorialSidebar"},"reference/reduction-strategies/minimize-and-maximize":{"id":"reference/reduction-strategies/minimize-and-maximize","title":"minimize and maximize","description":"Using the minimize and maximize reduction strategies","sidebar":"tutorialSidebar"},"reference/reduction-strategies/README":{"id":"reference/reduction-strategies/README","title":"Reduction strategies","description":"Flow\'s default reduction behaviors and available strategies to customize them","sidebar":"tutorialSidebar"},"reference/reduction-strategies/set":{"id":"reference/reduction-strategies/set","title":"set","description":"Using the set reduction strategy","sidebar":"tutorialSidebar"},"reference/reduction-strategies/sum":{"id":"reference/reduction-strategies/sum","title":"sum","description":"Using the sum reduction strategy","sidebar":"tutorialSidebar"}}}')}}]);