"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2604],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,u=d["".concat(l,".").concat(g)]||d[g]||m[g]||i;return n?a.createElement(u,r(r({ref:t},p),{},{components:n})):a.createElement(u,r({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9161:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={sidebar_position:2},l="Working with logs and statistics",c={unversionedId:"reference/working-logs-stats",id:"reference/working-logs-stats",title:"Working with logs and statistics",description:"Your logs and stats collections",source:"@site/docs/reference/working-logs-stats.md",sourceDirName:"reference",slug:"/reference/working-logs-stats",permalink:"/reference/working-logs-stats",draft:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/working-logs-stats.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Authorizing users and authenticating with Flow",permalink:"/reference/authentication"},next:{title:"Reduction strategies",permalink:"/reference/reduction-strategies/"}},p={},m=[{value:"Accessing logs",id:"accessing-logs",level:2},{value:"Accessing logs from the command line",id:"accessing-logs-from-the-command-line",level:3},{value:"Printing logs for a specific task",id:"printing-logs-for-a-specific-task",level:4},{value:"Printing all logs for a prefix",id:"printing-all-logs-for-a-prefix",level:4},{value:"Printing logs by task type",id:"printing-logs-by-task-type",level:4},{value:"Accessing logs by materialization",id:"accessing-logs-by-materialization",level:3}],d={toc:m};function g(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"working-with-logs-and-statistics"},"Working with logs and statistics"),(0,i.kt)("p",null,"Your ",(0,i.kt)("a",{parentName:"p",href:"/concepts/advanced/logs-stats"},(0,i.kt)("inlineCode",{parentName:"a"},"logs")," and ",(0,i.kt)("inlineCode",{parentName:"a"},"stats")," collections"),"\nare useful for debugging and monitoring catalog tasks."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Beta")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Access to statistics is still a work in progress. For now, this documentation deals strictly with logs."))),(0,i.kt)("h2",{id:"accessing-logs"},"Accessing logs"),(0,i.kt)("p",null,"You can access logs by materializing them to an external endpoint, or from the command line."),(0,i.kt)("h3",{id:"accessing-logs-from-the-command-line"},"Accessing logs from the command line"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Beta")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"flowctl logs")," subcommand is not currently available due to an ongoing overhaul of\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"flowctl")," binary. Command line support will be added back soon.\nContact ",(0,i.kt)("a",{parentName:"p",href:"mailto:support@estuary.dev"},"Estuary Support")," for more information."),(0,i.kt)("p",{parentName:"div"},"For now, use a ",(0,i.kt)("a",{parentName:"p",href:"#accessing-logs-by-materialization"},"materialization")," to view logs."))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"flowctl logs")," subcommand allows you to print logs from the command line.\nThis method allows more flexibility and is ideal for debugging."),(0,i.kt)("p",null,"You can retrieve logs for any task that is part of a catalog that is currently deployed."),(0,i.kt)("h4",{id:"printing-logs-for-a-specific-task"},"Printing logs for a specific task"),(0,i.kt)("p",null,"You can print logs for a given deployed task using the flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--task")," followed by the task name."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"flowctl logs --task acmeCo/anvils/capture-one\n")),(0,i.kt)("h4",{id:"printing-all-logs-for-a-prefix"},"Printing all logs for a prefix"),(0,i.kt)("p",null,"You can print all logs for currently deployed catalogs of a given prefix using the flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--tenant"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"flowctl logs --tenant acmeCo\n")),(0,i.kt)("p",null,"This is the same as printing the entire contents of the collection ",(0,i.kt)("inlineCode",{parentName:"p"},"ops/acmeCo/logs"),"."),(0,i.kt)("h4",{id:"printing-logs-by-task-type"},"Printing logs by task type"),(0,i.kt)("p",null,"Within a given prefix, you can print logs for all deployed tasks of a given type using the flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--task-type")," followed by one of ",(0,i.kt)("inlineCode",{parentName:"p"},"capture"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"derivation"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"materialization"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"flowctl logs --tenant acmeCo --task-type capture\n")),(0,i.kt)("h3",{id:"accessing-logs-by-materialization"},"Accessing logs by materialization"),(0,i.kt)("p",null,"You can materialize your ",(0,i.kt)("inlineCode",{parentName:"p"},"logs")," collection to an external system.\nThis is typically the preferred method if you\u2019d like to continuously work with or monitor logs.\nIt's easiest to materialize the whole collection, but you can use a ",(0,i.kt)("a",{parentName:"p",href:"../../concepts/materialization/#partition-selectors"},"partition selector")," to only materialize specific tasks, as the ",(0,i.kt)("inlineCode",{parentName:"p"},"logs")," collection is partitioned on tasks."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Be sure to add a partition selector to exclude the logs of the materialization\nitself. Otherwise, you could trigger an infinite loop in which the connector\nmaterializes its own logs, logs that event, and so on."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"acmeCo/anvils/logs:\n  endpoint:\n    connector:\n      image: ghcr.io/estuary/materialize-webhook:dev\n      config:\n        address: my.webhook.com\n  bindings:\n    - resource:\n        relativePath: /log/wordcount\n      source: ops/acmeCo/logs\n      # Exclude the logs of this materialization to avoid an infinite loop.\n      partitions:\n        exclude:\n          name: ['acmeCo/anvils/logs']\n")))}g.isMDXComponent=!0}}]);